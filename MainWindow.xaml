<Window x:Class="ToDoList.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:models="clr-namespace:ToDoList.Models"
        xmlns:vm="clr-namespace:ToDoList.ViewModels"
        xmlns:local="clr-namespace:ToDoList.Converters"
        WindowStartupLocation="CenterScreen"
        Title="To Do List" Height="450" Width="879">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <local:TimedTaskVisibilityConverter x:Key="TimedTaskVisibilityConverter"/>

        <Style x:Key="CustomBtnTask" TargetType="Button">
            <Setter Property="Margin" Value="5,0,0,0" />
            <Setter Property="Background" Value="White" />
            <Setter Property="BorderBrush" Value="White" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="FontFamily" Value="Noto Sans SC Black" />
            <Setter Property="Foreground" Value="#FF868686" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" CornerRadius="3"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#b9f8f2"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#30e8d6"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#FFF0F0F0"/>
                                <Setter Property="Foreground" Value="#FFAAAAAA"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CustomBtnEnd" TargetType="Button">
            <Setter Property="Height" Value="30" />
            <Setter Property="Width" Value="120" />
            <Setter Property="Margin" Value="0,0,0,10" />
            <Setter Property="Background" Value="White" />
            <Setter Property="BorderBrush" Value="White" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="FontFamily" Value="Noto Sans SC Black" />
            <Setter Property="Foreground" Value="#FF868686" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" CornerRadius="3"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#b9f8f2"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#30e8d6"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#FFF0F0F0"/>
                                <Setter Property="Foreground" Value="#FFAAAAAA"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="IconBtn" TargetType="Button">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2">
                            <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Hover (MouseOver) -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FFE0E0E0"/>
                                <!-- Light gray -->
                            </Trigger>
                            <!-- Pressed -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FFC0C0C0"/>
                                <!-- Darker gray -->
                            </Trigger>
                            <!-- Disabled -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <!--<Window.DataContext>
        <vm:TaskListViewModel />
    </Window.DataContext>-->

    <Grid Margin="10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="150"/>
            <!-- Ширина лівої панелі -->
            <ColumnDefinition Width="*"/>
            <!-- Права панель — займає все решту -->
        </Grid.ColumnDefinitions>

        <!-- Ліва панель з кнопками і нікнеймом -->
        <Grid Grid.Column="0" Background="#defcf9" Margin="10,10,10,10">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <!-- Вільний простір зверху -->
                <RowDefinition Height="Auto"/>
                <!-- Кнопки та нікнейм внизу -->
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Bottom" >
                <!-- Ім'я користувача -->
                <TextBlock Text="{Binding Username}"
                           FontWeight="Bold"
                           FontSize="16"
                           Foreground="#333"
                           Margin="0,0,0,250"
                           HorizontalAlignment="Center" />

                <Button Content="Log Out"
                    Style="{StaticResource CustomBtnEnd}"
                    Click="Logout_Click"
                    Command="{Binding ExitCommand}"
                    Margin="0,0,0,20" />

                <Button Content="Exit"
                    Style="{StaticResource CustomBtnEnd}"
                    Click="CloseButton_Click"
                    Command="{Binding CloseCommand}" />

            </StackPanel>
        </Grid>

        <!-- Права панель  -->
        <DockPanel Grid.Column="1" Margin="0,0,0,0">

            <!-- Create Task -->
            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="0,0,0,10"
                        HorizontalAlignment="Center" VerticalAlignment="Top">

                <!-- TextBox with placeholder -->
                <Border CornerRadius="2" Background="White" BorderBrush="LightGray" BorderThickness="1" Margin="0,0,5,0">
                    <Grid>
                        <TextBox x:Name="TaskTitleBox"
                                 Width="309"
                                 Text="{Binding NewTaskTitle, UpdateSourceTrigger=PropertyChanged}"
                                 Margin="0,0,5,0"
                                 Padding="4"
                                 Background="Transparent"
                                 BorderThickness="0"
                                 TextChanged="TaskTitleBox_TextChanged" />

                        <TextBlock x:Name="PlaceholderText"
                                   Text="Enter task title..."
                                   Foreground="Gray"
                                   Margin="8,0,0,0"
                                   VerticalAlignment="Center"
                                   IsHitTestVisible="False" />
                    </Grid>
                </Border>

                <ComboBox Width="100" Margin="0,0,5,0"
                          ItemsSource="{Binding Categories}"
                          SelectedItem="{Binding NewTaskCategory}" />

                <DatePicker SelectedDate="{Binding NewTaskDate}" Margin="0,0,5,0" />

                <Button Content="Add Task" Command="{Binding AddBasicCommand}" Margin="5,0,0,0" Style="{StaticResource CustomBtnTask}" FontSize="12"/>
                <Button Content="Schedule a task" Command="{Binding AddTimedCommand}" Margin="5,0,0,0" Style="{StaticResource CustomBtnTask}" FontSize="12"/>
            </StackPanel>

            <!-- Task List -->
            <ListBox ItemsSource="{Binding TasksView}" Background="White">
                <ListBox.ItemTemplate>
                    <DataTemplate DataType="{x:Type models:TaskItem}">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Description}" Width="300">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsCompleted}" Value="True">
                                                    <Setter Property="Foreground" Value="Gray"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBlock Text="{Binding Category}" Width="80" VerticalAlignment="Center"/>
                                <Button Content="+" Width="30" Margin="5,0,0,0" Style="{StaticResource IconBtn}"
                                        Command="{Binding DataContext.ToggleExpandCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}" />
                                <Button Width="30" Margin="5,0,0,0"
                                        Command="{Binding DataContext.CompleteCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding Id}">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource IconBtn}">
                                            <Setter Property="Content" Value="✔"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsCompleted}" Value="True">
                                                    <Setter Property="Content" Value="↩"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <Button Content="🗑" Width="30"
                                        Style="{StaticResource IconBtn}"
                                        Command="{Binding DataContext.RemoveCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding Id}" Margin="5,0,0,0"/>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="0,5,0,0"
                                        Visibility="{Binding IsExpanded, Converter={StaticResource BoolToVisibilityConverter}}" >
                                <Button Content="📎 Attach file"
                                        Command="{Binding DataContext.AttachFileCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}" Margin="0,0,10,0"/>
                                <Button Content="📂 Open file"
                                        Command="{Binding DataContext.OpenAttachmentCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}" Margin="0,0,10,0"/>
                                <Button Content="🔔 Reminder" Margin="0,0,10,0"
                                        Command="{Binding DataContext.RemindCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}"
                                        Visibility="{Binding Converter={StaticResource TimedTaskVisibilityConverter}}"/>
                            </StackPanel>

                            <StackPanel Margin="30,5,0,10"
            Visibility="{Binding IsExpanded, Converter={StaticResource BoolToVisibilityConverter}}">
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Setter Property="Background" Value="#cadefc"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsExpanded}" Value="True">
                                                <Setter Property="Background" Value="#FFFAFAD2"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>

                                <TextBox Text="{Binding Details, UpdateSourceTrigger=PropertyChanged}" 
                                     AcceptsReturn="True" TextWrapping="Wrap" BorderBrush="#cadefc"
                                     VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Disabled"
                                     Background="#FFFFF8DC" Padding="5" LostFocus="DetailsTextBox_LostFocus"/>
                            </StackPanel>
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

        </DockPanel>
    </Grid>
</Window>
